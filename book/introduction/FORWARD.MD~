# MESC_Firmware
## Forward
Custom FOC, speed control firmware for use with the MESC_FOC_ESC hardware project
Also now ported to work on typical F405 based hardware (e.g. VESC, FSESC, custom boards...)
Also ported to work on L431RC and F401CC (Blackpill)
Other STM32 ports are easy to do, and perhaps other MCU vendors.

## Foreword:
This project is new as of 28/06/2020, and is the work of David Molony, experienced mechanical and electrical engineer, and software learner.   
Contributions from others welcome, but 
1) The project is not intended to be an all inclusive do everything like VESC. This project is intended to be minimal FOC that "just works" and is trivial to understand, port and build applications from
2) The project will remain in its entirety BSD 3 clause, MIT or other equivalent entirely permissively licenced.
3) As the project matures, while the code style remains nothing special, there are increasing numbers of originally developed and both effective and easy to implement techniques that are offered permissively. Borrowing sections of code for other projects is allowed, but without exception, if you borrow the code, even if you rename variables or break it up/relocate into various subroutines, you MUST credit the origin, and maintain the permissive BSD licencing inline if necessary. Failure to do so means you grant a perpetual permissive licence to your project and lose your rights to using this code permissively. This statement is in response to a pernicious yet ubiquitous habit of open source projects ripping out permissive licencing or taking public domain code and re-issuing under copyleft terms. The origin of this ire was searching for python source and finding the entire cpython project online (since removed) with all trace of the BSD/PSF licence removed and replaced with GPL.

**Thanks to contributors, especially:**
c0d3b453 for large amounts of helpwith C and teaching, 
Salavat for initial STM32 setup and teaching,
Elwin (offline) for testing, motor control idea bouncing and assistance with current controllers,
Jens (Netzpfuscher) for tidying up and contributions to SinLUT,

